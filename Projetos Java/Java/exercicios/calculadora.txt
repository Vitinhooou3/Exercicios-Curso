Vamos criar um exemplo de uma calculadora que pode realizar operações matemáticas básicas (adição, subtração, multiplicação e divisão) usando herança, abstração, polimorfismo e interfaces.

// Interface para as operações da calculadora
interface Operation {
    double performOperation(double num1, double num2);
}

// Classes concretas que implementam as operações
class Addition implements Operation {
    @Override
    public double performOperation(double num1, double num2) {
        return num1 + num2;
    }
}

class Subtraction implements Operation {
    @Override
    public double performOperation(double num1, double num2) {
        return num1 - num2;
    }
}

class Multiplication implements Operation {
    @Override
    public double performOperation(double num1, double num2) {
        return num1 * num2;
    }
}

class Division implements Operation {
    @Override
    public double performOperation(double num1, double num2) {
        if (num2 != 0) {
            return num1 / num2;
        } else {
            throw new ArithmeticException("Cannot divide by zero");
        }
    }
}

// Classe que representa a calculadora
class Calculator {
    private Operation operation;

    public Calculator(Operation operation) {
        this.operation = operation;
    }

    public double calculate(double num1, double num2) {
        return operation.performOperation(num1, num2);
    }
}

public class CalculatorApp {
    public static void main(String[] args) {
        Calculator additionCalculator = new Calculator(new Addition());
        Calculator subtractionCalculator = new Calculator(new Subtraction());
        Calculator multiplicationCalculator = new Calculator(new Multiplication());
        Calculator divisionCalculator = new Calculator(new Division());

        double num1 = 10.0;
        double num2 = 5.0;

        System.out.println("Resultado da Adição: " + additionCalculator.calculate(num1, num2));
        System.out.println("Resultado da Subtração: " + subtractionCalculator.calculate(num1, num2));
        System.out.println("Resultado da Multiplicação: " + multiplicationCalculator.calculate(num1, num2));
        
        try {
            System.out.println("Resultado da Divisão: " + divisionCalculator.calculate(num1, num2));
        } catch (ArithmeticException e) {
            System.out.println("Erro: " + e.getMessage());
        }
    }
}

Neste exemplo, temos uma interface Operation que define o método performOperation() para realizar as operações matemáticas. Em seguida, criamos quatro classes concretas (Addition, Subtraction, Multiplication e Division) que implementam essa interface e realizam as operações correspondentes.

A classe Calculator possui um objeto de operação e permite calcular o resultado usando a operação selecionada. No programa CalculatorApp, criamos instâncias da classe Calculator com diferentes operações e realizamos cálculos de adição, subtração, multiplicação e divisão.

